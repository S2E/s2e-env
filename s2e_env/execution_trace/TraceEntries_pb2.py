# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: TraceEntries.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12TraceEntries.proto\x12\ts2e_trace\"\xa5\x01\n\x11PbTraceItemHeader\x12\x10\n\x08state_id\x18\x01 \x02(\r\x12\x11\n\ttimestamp\x18\x02 \x02(\x04\x12\x15\n\raddress_space\x18\x03 \x02(\x04\x12\x0b\n\x03pid\x18\x04 \x02(\r\x12\x0b\n\x03tid\x18\x05 \x02(\r\x12\n\n\x02pc\x18\x06 \x02(\x04\x12.\n\x04type\x18\x07 \x02(\x0e\x32 .s2e_trace.PbTraceItemHeaderType\"#\n\x0fPbTraceItemFork\x12\x10\n\x08\x63hildren\x18\x01 \x03(\r\"\xac\x02\n\x17PbTraceModuleLoadUnload\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0c\n\x04path\x18\x02 \x02(\t\x12\x0b\n\x03pid\x18\x03 \x02(\x04\x12\x15\n\raddress_space\x18\x04 \x02(\x04\x12<\n\x08sections\x18\x05 \x03(\x0b\x32*.s2e_trace.PbTraceModuleLoadUnload.Section\x1a\x92\x01\n\x07Section\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x19\n\x11runtime_load_base\x18\x02 \x02(\x04\x12\x18\n\x10native_load_base\x18\x03 \x02(\x04\x12\x0c\n\x04size\x18\x04 \x02(\r\x12\x10\n\x08readable\x18\x05 \x02(\x08\x12\x10\n\x08writable\x18\x06 \x02(\x08\x12\x12\n\nexecutable\x18\x07 \x02(\x08\"+\n\x14PbTraceProcessUnload\x12\x13\n\x0breturn_code\x18\x01 \x02(\x04\"8\n\x13PbTraceRegisterData\x12\x11\n\tsymb_mask\x18\x01 \x02(\r\x12\x0e\n\x06values\x18\x02 \x03(\x04\"k\n\rPbTraceTbData\x12)\n\x07tb_type\x18\x01 \x02(\x0e\x32\x18.s2e_trace.PbTraceTbType\x12\x10\n\x08\x66irst_pc\x18\x02 \x02(\x04\x12\x0f\n\x07last_pc\x18\x03 \x02(\x04\x12\x0c\n\x04size\x18\x04 \x02(\r\"t\n\x1cPbTraceTranslationBlockStart\x12&\n\x04\x64\x61ta\x18\x01 \x02(\x0b\x32\x18.s2e_trace.PbTraceTbData\x12,\n\x04regs\x18\x02 \x02(\x0b\x32\x1e.s2e_trace.PbTraceRegisterData\"r\n\x1aPbTraceTranslationBlockEnd\x12&\n\x04\x64\x61ta\x18\x01 \x02(\x0b\x32\x18.s2e_trace.PbTraceTbData\x12,\n\x04regs\x18\x02 \x02(\x0b\x32\x1e.s2e_trace.PbTraceRegisterData\"o\n\x17PbTraceTranslationBlock\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x0f\n\x07last_pc\x18\x02 \x02(\x04\x12\x0c\n\x04size\x18\x03 \x02(\r\x12)\n\x07tb_type\x18\x04 \x02(\x0e\x32\x18.s2e_trace.PbTraceTbType\"%\n\rPbTraceOsInfo\x12\x14\n\x0ckernel_start\x18\x01 \x02(\x04\".\n\x10PbTraceException\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x0e\n\x06vector\x18\x02 \x02(\r\"m\n\x0fPbTraceTestCase\x12\x32\n\x05items\x18\x01 \x03(\x0b\x32#.s2e_trace.PbTraceTestCase.KeyValue\x1a&\n\x08KeyValue\x12\x0b\n\x03key\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\x0c\"\xf6\x02\n\x13PbTraceMemoryAccess\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\x04\x12\r\n\x05value\x18\x03 \x02(\x04\x12\x0c\n\x04size\x18\x04 \x02(\r\x12\r\n\x05\x66lags\x18\x05 \x02(\r\x12\x14\n\x0chost_address\x18\x06 \x02(\x04\x12\x17\n\x0f\x63oncrete_buffer\x18\x07 \x02(\x04\"\xe6\x01\n\x05\x46lags\x12\x19\n\x15\x45XECTRACE_MEM_INVALID\x10\x00\x12\x17\n\x13\x45XECTRACE_MEM_WRITE\x10\x01\x12\x14\n\x10\x45XECTRACE_MEM_IO\x10\x02\x12\x19\n\x15\x45XECTRACE_MEM_SYMBVAL\x10\x04\x12\x1a\n\x16\x45XECTRACE_MEM_SYMBADDR\x10\x08\x12\x1d\n\x19\x45XECTRACE_MEM_HASHOSTADDR\x10\x10\x12\x1e\n\x1a\x45XECTRACE_MEM_SYMBHOSTADDR\x10 \x12\x1d\n\x19\x45XECTRACE_MEM_OBJECTSTATE\x10@\"J\n\x19PbTraceSimpleMemoryAccess\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x02(\x04\x12\x10\n\x08is_write\x18\x03 \x02(\x08\"(\n\x17PbTraceInstructionCount\x12\r\n\x05\x63ount\x18\x01 \x02(\x04\"\'\n\x12PbTraceStateSwitch\x12\x11\n\tnew_state\x18\x01 \x02(\r\"\x87\x01\n\x15PbTraceCacheSimParams\x12\x10\n\x08\x63\x61\x63he_id\x18\x01 \x02(\r\x12\x0c\n\x04size\x18\x02 \x02(\r\x12\x11\n\tline_size\x18\x03 \x02(\r\x12\x15\n\rassociativity\x18\x04 \x02(\r\x12\x16\n\x0eupper_cache_id\x18\x05 \x02(\r\x12\x0c\n\x04name\x18\x06 \x02(\t\"\x8a\x01\n\x14PbTraceCacheSimEntry\x12\x10\n\x08\x63\x61\x63he_id\x18\x01 \x02(\r\x12\n\n\x02pc\x18\x02 \x02(\x04\x12\x0f\n\x07\x61\x64\x64ress\x18\x03 \x02(\x04\x12\x0c\n\x04size\x18\x04 \x02(\r\x12\x12\n\nmiss_count\x18\x05 \x02(\r\x12\x10\n\x08is_write\x18\x06 \x02(\x08\x12\x0f\n\x07is_code\x18\x07 \x02(\x08\"\x98\x04\n\x0fPbTraceCfiStats\x12\x19\n\x11\x64irect_call_count\x18\x01 \x02(\x04\x12\x1b\n\x13indirect_call_count\x18\x02 \x02(\x04\x12\x11\n\tret_count\x18\x03 \x02(\x04\x12\x1c\n\x14\x63\x61ll_violation_count\x18\x04 \x02(\x04\x12\x1b\n\x13ret_violation_count\x18\x06 \x02(\x04\x12*\n\"ret_from_unknown_exec_region_count\x18\t \x02(\x04\x12(\n ret_to_unknown_exec_region_count\x18\n \x02(\x04\x12$\n\x1cmissing_return_address_count\x18\x0b \x02(\x04\x12#\n\x1b\x63\x61ll_and_return_match_count\x18\x0c \x02(\x04\x12 \n\x18whitelisted_return_count\x18\r \x02(\x04\x12 \n\x18pending_violations_count\x18\x0e \x02(\x04\x12&\n\x1ewhitelisted_call_pattern_count\x18\x0f \x02(\x04\x12-\n%ret_to_parent_with_displacement_count\x18\x10 \x02(\x04\x12)\n!call_to_unknown_exec_region_count\x18\x11 \x02(\x04\x12\x18\n\x10ret_to_call_site\x18\x12 \x02(\x04\"a\n\x16PbTraceViolationPcInfo\x12\n\n\x02pc\x18\x01 \x02(\x04\x12\x13\n\x0bmodule_path\x18\x02 \x01(\t\x12\x11\n\tmodule_pc\x18\x03 \x01(\x04\x12\x13\n\x0b\x64isassembly\x18\x04 \x01(\t\"\xf3\x01\n\x13PbTraceCfiViolation\x12\x30\n\x04type\x18\x01 \x02(\x0e\x32\".s2e_trace.PbTraceCfiViolationType\x12\x31\n\x06source\x18\x02 \x02(\x0b\x32!.s2e_trace.PbTraceViolationPcInfo\x12\x36\n\x0b\x64\x65stination\x18\x03 \x02(\x0b\x32!.s2e_trace.PbTraceViolationPcInfo\x12?\n\x14\x65xpected_destination\x18\x04 \x01(\x0b\x32!.s2e_trace.PbTraceViolationPcInfo*\xa3\x03\n\x15PbTraceItemHeaderType\x12\x0e\n\nTRACE_FORK\x10\x00\x12\x12\n\x0eTRACE_MOD_LOAD\x10\x01\x12\x14\n\x10TRACE_MOD_UNLOAD\x10\x02\x12\x15\n\x11TRACE_PROC_UNLOAD\x10\x03\x12\x12\n\x0eTRACE_TB_START\x10\x04\x12\x10\n\x0cTRACE_TB_END\x10\x05\x12\x10\n\x0cTRACE_OSINFO\x10\x08\x12\x13\n\x0fTRACE_EXCEPTION\x10\t\x12\x12\n\x0eTRACE_TESTCASE\x10\n\x12\x10\n\x0cTRACE_MEMORY\x10\x0b\x12\x13\n\x0fTRACE_PAGEFAULT\x10\x0c\x12\x11\n\rTRACE_TLBMISS\x10\r\x12\x10\n\x0cTRACE_ICOUNT\x10\x0e\x12\x16\n\x12TRACE_STATE_SWITCH\x10\x0f\x12\x0f\n\x0bTRACE_BLOCK\x10\x10\x12\x1a\n\x16TRACE_CACHE_SIM_PARAMS\x10\x11\x12\x19\n\x15TRACE_CACHE_SIM_ENTRY\x10\x12\x12\x13\n\x0fTRACE_CFI_STATS\x10\x13\x12\x17\n\x13TRACE_CFI_VIOLATION\x10\x14*\xc2\x01\n\rPbTraceTbType\x12\x0e\n\nTB_DEFAULT\x10\x00\x12\n\n\x06TB_JMP\x10\x01\x12\x0e\n\nTB_JMP_IND\x10\x02\x12\x0f\n\x0bTB_COND_JMP\x10\x03\x12\x13\n\x0fTB_COND_JMP_IND\x10\x04\x12\x0b\n\x07TB_CALL\x10\x05\x12\x0f\n\x0bTB_CALL_IND\x10\x06\x12\n\n\x06TB_REP\x10\x07\x12\n\n\x06TB_RET\x10\x08\x12\x0b\n\x07TB_IRET\x10\t\x12\x0b\n\x07TB_EXCP\x10\n\x12\x0f\n\x0bTB_SYSENTER\x10\x0b*C\n\x17PbTraceCfiViolationType\x12\x12\n\x0e\x43\x41LL_VIOLATION\x10\x00\x12\x14\n\x10RETURN_VIOLATION\x10\x01')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'TraceEntries_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PBTRACEITEMHEADERTYPE._serialized_start=2998
  _PBTRACEITEMHEADERTYPE._serialized_end=3417
  _PBTRACETBTYPE._serialized_start=3420
  _PBTRACETBTYPE._serialized_end=3614
  _PBTRACECFIVIOLATIONTYPE._serialized_start=3616
  _PBTRACECFIVIOLATIONTYPE._serialized_end=3683
  _PBTRACEITEMHEADER._serialized_start=34
  _PBTRACEITEMHEADER._serialized_end=199
  _PBTRACEITEMFORK._serialized_start=201
  _PBTRACEITEMFORK._serialized_end=236
  _PBTRACEMODULELOADUNLOAD._serialized_start=239
  _PBTRACEMODULELOADUNLOAD._serialized_end=539
  _PBTRACEMODULELOADUNLOAD_SECTION._serialized_start=393
  _PBTRACEMODULELOADUNLOAD_SECTION._serialized_end=539
  _PBTRACEPROCESSUNLOAD._serialized_start=541
  _PBTRACEPROCESSUNLOAD._serialized_end=584
  _PBTRACEREGISTERDATA._serialized_start=586
  _PBTRACEREGISTERDATA._serialized_end=642
  _PBTRACETBDATA._serialized_start=644
  _PBTRACETBDATA._serialized_end=751
  _PBTRACETRANSLATIONBLOCKSTART._serialized_start=753
  _PBTRACETRANSLATIONBLOCKSTART._serialized_end=869
  _PBTRACETRANSLATIONBLOCKEND._serialized_start=871
  _PBTRACETRANSLATIONBLOCKEND._serialized_end=985
  _PBTRACETRANSLATIONBLOCK._serialized_start=987
  _PBTRACETRANSLATIONBLOCK._serialized_end=1098
  _PBTRACEOSINFO._serialized_start=1100
  _PBTRACEOSINFO._serialized_end=1137
  _PBTRACEEXCEPTION._serialized_start=1139
  _PBTRACEEXCEPTION._serialized_end=1185
  _PBTRACETESTCASE._serialized_start=1187
  _PBTRACETESTCASE._serialized_end=1296
  _PBTRACETESTCASE_KEYVALUE._serialized_start=1258
  _PBTRACETESTCASE_KEYVALUE._serialized_end=1296
  _PBTRACEMEMORYACCESS._serialized_start=1299
  _PBTRACEMEMORYACCESS._serialized_end=1673
  _PBTRACEMEMORYACCESS_FLAGS._serialized_start=1443
  _PBTRACEMEMORYACCESS_FLAGS._serialized_end=1673
  _PBTRACESIMPLEMEMORYACCESS._serialized_start=1675
  _PBTRACESIMPLEMEMORYACCESS._serialized_end=1749
  _PBTRACEINSTRUCTIONCOUNT._serialized_start=1751
  _PBTRACEINSTRUCTIONCOUNT._serialized_end=1791
  _PBTRACESTATESWITCH._serialized_start=1793
  _PBTRACESTATESWITCH._serialized_end=1832
  _PBTRACECACHESIMPARAMS._serialized_start=1835
  _PBTRACECACHESIMPARAMS._serialized_end=1970
  _PBTRACECACHESIMENTRY._serialized_start=1973
  _PBTRACECACHESIMENTRY._serialized_end=2111
  _PBTRACECFISTATS._serialized_start=2114
  _PBTRACECFISTATS._serialized_end=2650
  _PBTRACEVIOLATIONPCINFO._serialized_start=2652
  _PBTRACEVIOLATIONPCINFO._serialized_end=2749
  _PBTRACECFIVIOLATION._serialized_start=2752
  _PBTRACECFIVIOLATION._serialized_end=2995
# @@protoc_insertion_point(module_scope)
