#!/bin/bash
#
# This file was automatically generated by s2e-env at
# {{ current_time | datetimefilter }}
#
# A bootstrap file is used to control the execution of your Linux target
# program in S2E.
#
# When you run launch-s2e.sh the guest VM will call s2eget to fetch this
# bootstrap script and execute it. This bootstrap script and the S2E config
# file determine how your target program is analyzed.
#

# To save you the hassle of rebuilding the image every time you want to update
# S2E's guest tools, the first thing that we do is get the latest versions of
# the guest tools.
function update_guest_tools {
    GUEST_TOOLS="s2e.so s2ecmd s2eget s2eput"
    for TOOL in ${GUEST_TOOLS}; do
        ./s2eget guest-tools/${TOOL}
        chmod +x ${TOOL}
    done
}

# Execute the target
function execute {
    TARGET=$1

    # Make sure that the target is executable
    chmod +x ${TARGET}

    {% if use_symb_input_file == true %}
    # Create a symbolic file of size 256 bytes
    SYMB_FILE="/tmp/SYMB_FILE"
    truncate -s 256 ${SYMB_FILE}

    if [ $? -ne 0 ]; then
        ./s2ecmd kill 1 "Failed to create symbolic file"
        exit 1
    fi

    ./s2ecmd symbfile ${SYMB_FILE}
    {% endif %}

    {% if dynamically_linked == true %}
    # {{ target }} is dynamically linked, so s2e.so has been preloaded to
    # provide symbolic arguments to the target if required. You can do so by
    # using the ``S2E_SYM_ARGS`` environment variable as required
    LD_PRELOAD=./s2e.so ./${TARGET} {{ target_args | join(' ') }}
    {% else %}
    ./${TARGET} {{ target_args | join(' ') }}
    {% endif %}
}

###############################################
# Bootstrap script starts executing from here #
###############################################

{% include 'bootstrap.common.sh' %}
